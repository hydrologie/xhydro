# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Thomas-Charles Fortier Filion
# This file is distributed under the same license as the xHydro package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: xHydro 0.4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-03 11:23-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../apidoc/xhydro.extreme_value_analysis.structures.rst:2
msgid "xhydro.extreme\\_value\\_analysis.structures package"
msgstr ""

#: of xhydro.extreme_value_analysis.structures:1
msgid ""
"Python and Julia structures used in the extreme value analysis and their "
"conversion rules."
msgstr ""

#: ../../apidoc/xhydro.extreme_value_analysis.structures.rst:11
msgid "Submodules"
msgstr ""

#: ../../apidoc/xhydro.extreme_value_analysis.structures.rst:14
msgid "xhydro.extreme\\_value\\_analysis.structures.conversions module"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.conversions:1
msgid "Conversion functions between Julia and Python objects."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_matrix_tuple_to_py_list:1
msgid "Convert a julia matrix of tuples to a python list of tuples."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_matrix_tuple_to_py_list:4
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_to_py_list:4
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_tuple_to_py_list:4
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:4
#: xhydro.extreme_value_analysis.structures.conversions.py_str_to_jl_symbol:4
#: xhydro.extreme_value_analysis.structures.conversions.py_variable_to_jl_variable:4
#: xhydro.extreme_value_analysis.structures.dataitem.Variable:4
#: xhydro.extreme_value_analysis.structures.dataitem.VariableStd:4
#: xhydro.extreme_value_analysis.structures.util.create_nan_mask:4
#: xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:4
#: xhydro.extreme_value_analysis.structures.util.insert_covariates:4
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:4
#: xhydro.extreme_value_analysis.structures.util.param_cint:4
#: xhydro.extreme_value_analysis.structures.util.recover_nan:4
#: xhydro.extreme_value_analysis.structures.util.remove_nan:4
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:4
#: xhydro.extreme_value_analysis.structures.util.return_nan:4
msgid "Parameters"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_matrix_tuple_to_py_list:5
msgid "jl_matrix_tuple"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_matrix_tuple_to_py_list:-1
msgid "julia.Matrix[Tuple]"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_matrix_tuple_to_py_list:6
msgid "The julia.Matrix[Tuple] object to convert."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_matrix_tuple_to_py_list:9
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_to_py_list:9
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_tuple_to_py_list:9
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:9
#: xhydro.extreme_value_analysis.structures.conversions.py_str_to_jl_symbol:9
#: xhydro.extreme_value_analysis.structures.conversions.py_variable_to_jl_variable:9
#: xhydro.extreme_value_analysis.structures.util.create_nan_mask:9
#: xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:16
#: xhydro.extreme_value_analysis.structures.util.insert_covariates:13
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:9
#: xhydro.extreme_value_analysis.structures.util.param_cint:15
#: xhydro.extreme_value_analysis.structures.util.recover_nan:12
#: xhydro.extreme_value_analysis.structures.util.remove_nan:12
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:26
#: xhydro.extreme_value_analysis.structures.util.return_nan:9
msgid "Returns"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_matrix_tuple_to_py_list:10
msgid "list[tuple]"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_matrix_tuple_to_py_list:11
msgid "The converted list[tuple] object."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_to_py_list:1
msgid "Convert a Julia vector to a python list."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_to_py_list:5
msgid "jl_vector"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_to_py_list:-1
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:10
msgid "julia.Vector"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_to_py_list:6
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_tuple_to_py_list:6
msgid "The julia.Vector object to convert."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_to_py_list:10
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_tuple_to_py_list:10
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:-1
msgid "list"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_to_py_list:11
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_tuple_to_py_list:11
msgid "The converted list object."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_tuple_to_py_list:1
msgid ""
"Convert a julia vector containing a single tuple (i.e. [(1,2,3)]) to a "
"python list (i.e. [1,2,3])."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_tuple_to_py_list:5
msgid "jl_vector_tuple"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.jl_vector_tuple_to_py_list:-1
msgid "julia.Vector[Tuple]"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:1
msgid "Convert a python list to a Julia Vector object."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:5
msgid "py_list"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:6
msgid "The list object to convert."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:11
msgid "The converted Julia Vector object."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:14
msgid "Raises"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:15
msgid "ValueError"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_list_to_jl_vector:16
msgid ""
"If the list contains mixed types that are not all strings or numbers. If "
"the list contains unsupported types/complex structures such that it "
"cannot be converted to a Julia Vector."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_str_to_jl_symbol:1
msgid "Convert a python string to a Julia Symbol object."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_str_to_jl_symbol:5
msgid "string"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_str_to_jl_symbol:-1
#: xhydro.extreme_value_analysis.structures.dataitem.Variable:-1
#: xhydro.extreme_value_analysis.structures.dataitem.VariableStd:-1
#: xhydro.extreme_value_analysis.structures.util.insert_covariates:-1
msgid "str"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_str_to_jl_symbol:6
msgid "The string object to convert."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_str_to_jl_symbol:10
msgid "julia.Symbol"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_str_to_jl_symbol:11
msgid "The converted Julia Symbol object."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_variable_to_jl_variable:1
msgid "Convert a python Variable object to a Julia Variable object."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_variable_to_jl_variable:5
msgid "py_var"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_variable_to_jl_variable:-1
msgid "Variable"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_variable_to_jl_variable:6
msgid "The Variable object to convert."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_variable_to_jl_variable:10
msgid "julia.Extremes.Variable"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.conversions.py_variable_to_jl_variable:11
msgid "The converted Julia Variable object."
msgstr ""

#: ../../apidoc/xhydro.extreme_value_analysis.structures.rst:23
msgid "xhydro.extreme\\_value\\_analysis.structures.dataitem module"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem:1
msgid ""
"DataItem, Variable and VariableStd classes. Python equivalents to classes"
" of the same names in Extremes.jl."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.DataItem:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.DataItem:1
msgid "Abstract base class for Variable and VariableStd classes."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.Variable:1
#: xhydro.extreme_value_analysis.structures.dataitem.VariableStd:1
msgid ""
"Bases: "
":py:class:`~xhydro.extreme_value_analysis.structures.dataitem.DataItem`"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.Variable:1
msgid "Variable class."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.Variable:5
#: xhydro.extreme_value_analysis.structures.dataitem.VariableStd:5
msgid "name"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.Variable:6
msgid "Name of the Variable."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.Variable:7
#: xhydro.extreme_value_analysis.structures.dataitem.VariableStd:7
msgid "value"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.Variable:-1
#: xhydro.extreme_value_analysis.structures.dataitem.VariableStd:-1
msgid "list of float"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.Variable:8
msgid "Values of the Variable."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.VariableStd:1
msgid "VariableStd class."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.VariableStd:6
msgid "Name of the VariableStd."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.VariableStd:8
msgid "Values of the VariableStd."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.VariableStd:9
msgid "offset"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.VariableStd:-1
#: xhydro.extreme_value_analysis.structures.util.param_cint:-1
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:-1
msgid "float"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.VariableStd:10
msgid "Offset applied to the values of the VariableStd."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.VariableStd:11
msgid "scale"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.dataitem.VariableStd:12
msgid "Scale factor applied to the values of the VariableStd."
msgstr ""

#: ../../apidoc/xhydro.extreme_value_analysis.structures.rst:32
msgid "xhydro.extreme\\_value\\_analysis.structures.util module"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util:1
msgid "Utility functions for parameter estimation."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.create_nan_mask:1
msgid "Create a mask indicating NaN positions across multiple nested lists."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.create_nan_mask:5
msgid "\\*nested_lists"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.create_nan_mask:-1
msgid "tuple of list of lists # noqa: RST213"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.create_nan_mask:6
msgid "Any number of nested lists (lists of lists)."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.create_nan_mask:10
msgid "mask :"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.create_nan_mask:11
msgid ""
"A single list mask with True where NaNs are present for all the nested "
"lists. Example: np.array([True, False, True, True, False])."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.create_nan_mask:15
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:14
msgid "Notes"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.create_nan_mask:16
msgid ""
"This function is useful when the fitting data and covariates contains "
"NaNs and needs to be pruned. To ensure that the covariate data remains "
"aligned with the fitting data, the function returns a mask with True "
"values where there is at least one NaN either in the data or in the "
"covariates."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.create_nan_mask:21
#: xhydro.extreme_value_analysis.structures.util.insert_covariates:18
msgid "Examples"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:1
msgid ""
"Exponentiate the logscale parameter along with covariates to obtain "
"actual scale parameter."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:5
msgid "params"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:-1
#: xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:17
#: xhydro.extreme_value_analysis.structures.util.recover_nan:-1
msgid "np.ndarray"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:6
msgid "The fitted parameters, including covariates."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:7
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:7
msgid "dist"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:-1
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:-1
msgid "str or rv_continuous"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:8
msgid ""
"The univariate distribution to fit, either as a string or as a "
"distribution object. Supported distributions include genextreme, "
"gumbel_r, genpareto."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:10
msgid "n_loccov"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:-1
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:-1
#: xhydro.extreme_value_analysis.structures.util.return_nan:-1
msgid "int"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:11
msgid "Number of covariates for the location parameter."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:12
msgid "n_scalecov"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:13
msgid "Number of covariates for the scale parameter."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.exponentiate_logscale:18
msgid ""
"Updated list with the exponential of the logscale parameter and "
"covariates."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.insert_covariates:1
msgid "Insert appropriate covariate names in the parameter names list."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.insert_covariates:5
msgid "param_names"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.insert_covariates:-1
#: xhydro.extreme_value_analysis.structures.util.insert_covariates:14
msgid "list[str]"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.insert_covariates:6
msgid "List of parameter names in which to insert the covariate names."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.insert_covariates:7
#: xhydro.extreme_value_analysis.structures.util.remove_nan:7
msgid "covariates"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.insert_covariates:8
msgid "List of covariate names to insert in the parameter names."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.insert_covariates:9
msgid "param_name"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.insert_covariates:10
msgid ""
"Name of the parameter (such as \"loc\", \"shape\", \"scale\") after which"
" the covariates are inserted."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.insert_covariates:15
msgid ""
"Updated list of parameter names with the appropriate covariates in the "
"right place."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:1
msgid ""
"Transform a list of lists into a julia.Vector of julia.Extremes.Variable "
"objects."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:5
msgid "covariate_list"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:-1
#: xhydro.extreme_value_analysis.structures.util.remove_nan:-1
#: xhydro.extreme_value_analysis.structures.util.remove_nan:13
msgid "list[list]"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:6
msgid "Covariates' data for a single parameter."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:10
msgid "julia.Vector[julia.Extremes.Variables]"
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:11
msgid ""
"The sequence of julia Variables to be used in non-stationary parameter "
"estimation."
msgstr ""

#: of
#: xhydro.extreme_value_analysis.structures.util.jl_variable_fit_parameters:15
msgid ""
"This function is necessary for non-stationary parameter estimation: see "
"example at extreme_value_analysis/parameterestimation.gevfit()."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:1
msgid ""
"Return a list of parameters and confidence intervals for a given Julia "
"fitted model."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:5
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:5
msgid "jl_model"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:-1
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:-1
msgid "Julia.Extremes.AbstractExtremeValueModel"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:6
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:6
msgid "Fitted Julia model."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:7
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:10
msgid "method"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:-1
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:-1
#, python-brace-format
msgid "{\"ML\", \"PWM\", \"BAYES\"}"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:8
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:11
msgid ""
"The fitting method, which can be maximum likelihood (ML), probability "
"weighted moments (PWM), or Bayesian inference (BAYES)."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:10
#: xhydro.extreme_value_analysis.structures.util.return_level_cint:13
msgid "confidence_level"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:11
msgid ""
"The confidence level for the confidence interval of each parameter. "
"Defaults to 0.95."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:16
#: xhydro.extreme_value_analysis.structures.util.return_nan:10
msgid "list[np.ndarray]"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.param_cint:17
msgid ""
"A list containing NumPy arrays for the estimated parameters, and upper "
"bounds for the confidence interval of each parameter."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.recover_nan:1
msgid "Recover the original length of lists by filling NaN in masked positions."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.recover_nan:5
#: xhydro.extreme_value_analysis.structures.util.remove_nan:5
msgid "mask"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.recover_nan:6
msgid ""
"A masked array indicating positions of valid data. Example: "
"np.array([True, False, True, True, False])."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.recover_nan:8
msgid "lists"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.recover_nan:-1
msgid "np.ndarray or list[list[float]]"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.recover_nan:9
msgid "A list of arrays to be recovered."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.recover_nan:13
msgid "list[list[float]]"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.recover_nan:14
msgid "A list of lists with NaNs filled in the original masked positions."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.remove_nan:1
msgid "Remove entries from a list of lists based on a boolean mask."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.remove_nan:-1
msgid "np.array"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.remove_nan:6
msgid "Array containing the True and False values."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.remove_nan:8
msgid "List of lists from which values will be removed according to the mask."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.remove_nan:14
msgid "A new list containing the list without the masked values."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:1
msgid ""
"Return a list of return levels and confidence intervals for a given Julia"
" fitted model."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:8
msgid ""
"Distribution, either as a string or as a distribution object. Supported "
"distributions include genextreme, gumbel_r, genpareto."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:14
msgid ""
"The confidence level (between 0 and 1) for the confidence interval of the"
" return level. Defaults to 0.95."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:16
msgid "return_period"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:17
msgid "Return period used to compute the return level."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:18
msgid "threshold_pareto"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:19
msgid "Threshold. Required when `dist=genpareto`."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:20
msgid "nobs_pareto"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:21
msgid "Number of total observation. Required when `dist=genpareto`."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:22
msgid "nobsperblock_pareto"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:23
msgid "Number of observation per block. Required when `dist=genpareto`."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:27
msgid "dict[str, list[float]]"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_level_cint:28
msgid ""
"A dictionary containing the estimated parameters and the lower and upper "
"bounds for the confidence interval of each parameter."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_nan:1
msgid ""
"Return a list of three lists, each containing NaN values of the specified"
" length."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_nan:5
msgid "length"
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_nan:6
msgid "The length of each list."
msgstr ""

#: of xhydro.extreme_value_analysis.structures.util.return_nan:11
msgid ""
"A list containing three lists, each of which contains NaN values of the "
"given length."
msgstr ""
