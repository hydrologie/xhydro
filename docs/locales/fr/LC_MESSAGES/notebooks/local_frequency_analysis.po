# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Thomas-Charles Fortier Filion
# This file is distributed under the same license as the xHydro package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: xHydro 0.4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-03 11:23-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../notebooks/local_frequency_analysis.ipynb:9
msgid "Local frequency analyses"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:325
msgid ""
"Data type cannot be displayed: application/javascript, "
"application/vnd.holoviews_load.v0+json"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:589
msgid ""
"Data type cannot be displayed: application/vnd.holoviews_load.v0+json, "
"application/javascript"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:680
msgid ""
"Data type cannot be displayed: text/html, "
"application/vnd.holoviews_exec.v0+json"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:744
msgid "Data extraction and preparation"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:746
msgid ""
"In this example, we will perform a frequency analysis using historical "
"timeseries data collected from various sites. Our first step is to "
"acquire a hydrological dataset. For this, we utilize the `xdatasets "
"<https://hydrologie.github.io/xdatasets/notebooks/getting_started.html>`__"
" library to retrieve hydrological data from the `Ministère de "
"l'Environnement, de la Lutte contre les changements climatiques, de la "
"Faune et des Parcs <https://www.cehq.gouv.qc.ca/atlas-hydroclimatique"
"/stations-hydrometriques/index.htm>`__ in Québec, Canada. Our query will "
"focus on stations with IDs beginning with ``020``, and specifically those"
" with natural flow pattern. Some stations have information on water "
"levels, but will will only process streamflow data."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:749
msgid ""
"Alternatively, users can provide their own ``xarray.DataArray``. When "
"preparing the data for frequency analysis, it must adhere to the "
"following requirements:"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:751
msgid "The dataset must include a ``time`` dimension."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:752
msgid ""
"If there is a 1D spatial dimension (e.g., ``id`` in the example below), "
"it must contain an attribute ``cf_role`` with the value "
"``timeseries_id``."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:753
msgid ""
"The variable must have at least a ``units`` attribute. Although "
"additional attributes, such as ``long_name`` and ``cell_methods``, are "
"not strictly required, they are expected by ``xclim``, which is invoked "
"during the frequency analysis. Missing these attributes will trigger "
"warnings."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1403
msgid "Acquiring block maxima"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1405
msgid ""
"The ``xhydro.indicators.get_yearly_op`` function can be used to extract "
"block maxima from a time series. This function provides several options "
"for customizing the extraction process, such as selecting the desired "
"time periods and more. In the following section, we will present the main"
" arguments available to help tailor the block maxima extraction to your "
"needs."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1586
msgid "a) Defining seasons"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1588
msgid ""
"Seasons can be defined using indexers compatible with "
"``xclim.core.calendar.select_time``. Four types of indexers are currently"
" supported:"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1590
msgid ""
"``month``: A sequence of month numbers (e.g., ``[1, 2, 12]`` for January,"
" February, and December)."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1591
msgid ""
"``season``: A sequence of season abbreviations, with options being "
"``'DJF'``, ``'MAM'``, ``'JJA'``, and ``'SON'`` (representing Winter, "
"Spring, Summer, and Fall, respectively)."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1592
msgid ""
"``doy_bounds``: A sequence specifying the inclusive bounds of the period "
"in terms of day of year (e.g., ``[152, 243]``)."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1593
#, python-format
msgid ""
"``date_bounds``: Similar to ``doy_bounds``, but using a month-day format "
"(``'%m-%d'``), such as ``[\"01-15\", \"02-23\"]``."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1595
msgid ""
"When using ``xhydro.indicators.get_yearly_op`` to calculate block maxima,"
" the indexers should be grouped within a dictionary and passed to the "
"``timeargs`` argument. The dictionary keys should represent the requested"
" period (e.g., ``'winter'``, ``'summer'``) and will be appended to the "
"variable name. Each dictionary entry can include the following:"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1597
msgid ""
"The indexer, as defined above (e.g., ``\"date_bounds\": [\"02-11\", "
"\"06-19\"]``)."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1598
msgid ""
"(Optional) An annual resampling frequency. This is mainly used for "
"indexers that span across the year. For example, setting ``\"freq\": "
"\"YS-DEC\"`` will start the year in December instead of January."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1631
msgid "b) Defining criteria for missing values"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1633
msgid ""
"The ``xhydro.indicators.get_yearly_op`` function also includes two "
"arguments, ``missing`` and ``missing_options``, which allow you to define"
" tolerances for missing data. These arguments leverage ``xclim`` to "
"handle missing values, and the available options are detailed in the "
"`xclim documentation <https://xclim.readthedocs.io/en/stable/checks.html"
"#missing-values-identification>`__."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1750
msgid "c) Simple example"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:1752
#, python-format
msgid ""
"Let's start with a straightforward example using the ``timeargs`` "
"dictionary defined earlier. In this case, we will set a tolerance where a"
" maximum of 15% of missing data in a year will be considered acceptable "
"for the year to be regarded as valid."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:2529
msgid "d) Advanced example: Using custom seasons per year or per station"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:2531
msgid ""
"Customizing date ranges for each year or each station is not directly "
"supported by ``xhydro.indicators.get_yearly_op``. However, users can work"
" around this limitation by masking their data before calling the "
"function. When applying this approach, be sure to adjust the ``missing`` "
"argument to accommodate the changes in the data availability."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:2533
msgid ""
"In this example, we will define a season that starts on a random date in "
"April and ends on a random date in June. Since we will mask almost the "
"entire year, the tolerance for missing data should be adjusted "
"accordingly. Instead of setting a general tolerance for missing data, we "
"will use the ``at_least_n`` method to specify that at least 45 days of "
"data must be available for the period to be considered valid."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:2906
msgid "e) Alternative variable: Computing volumes"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:2908
msgid ""
"Frequency analysis can also be applied to volumes, following a similar "
"workflow to that of streamflow data. The main difference is that if we're"
" starting with streamflow data, we must first convert it into volumes "
"using ``xhydro.indicators.compute_volume`` (e.g., going from ``m3 s-1`` "
"to ``m3``). Additionally, if necessary, the ``get_yearly_op`` function "
"includes an argument, ``interpolate_na``, which can be used to "
"interpolate missing data before calculating the sum."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:3100
msgid "Local frequency analysis"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:3102
msgid ""
"After extracting the raw data, such as annual maximums or minimums, the "
"local frequency analysis is performed in three steps:"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:3104
msgid ""
"Use ``xhydro.frequency_analysis.local.fit`` to determine the best set of "
"parameters for a given number of statistical distributions."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:3105
msgid ""
"(Optional) Use ``xhydro.frequency_analysis.local.criteria`` to compute "
"goodness-of-fit criteria and assess how well each statistical "
"distribution fits the data."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:3106
msgid ""
"Use ``xhydro.frequency_analysis.local.parametric_quantiles`` to calculate"
" return levels based on the fitted parameters."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:3108
msgid ""
"To speed up the Notebook, we'll only perform the analysis on a subset of "
"variables."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:3243
msgid ""
"The ``fit`` function enables the fitting of multiple statistical "
"distributions simultaneously, such as ``[\"genextreme\", \"pearson3\", "
"\"gumbel_r\", \"expon\"]``. Since different distributions have varying "
"parameter sets (and sometimes different naming conventions), ``xHydro`` "
"handles this complexity by using a ``dparams`` dimension, filling in NaN "
"values where needed. When the results interact with ``SciPy``, such as "
"the ``parametric_quantiles`` function, only the relevant parameters for "
"each distribution are passed. The selected distributions are stored in a "
"newly created ``scipy_dist`` dimension."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:3958
msgid ""
"Criteria like AIC (Akaike Information Criterion), BIC (Bayesian "
"Information Criterion), and AICC (Corrected AIC) are valuable tools for "
"comparing the fit of different statistical models. These criteria balance"
" the goodness-of-fit of a model with its complexity, helping to avoid "
"overfitting. AIC and AICC are particularly useful when comparing models "
"with different numbers of parameters, while BIC tends to penalize "
"complexity more heavily, making it more conservative. Lower values of "
"these criteria indicate better model performance, with AICC being "
"especially helpful in small sample sizes. By using these metrics, we can "
"objectively determine the most appropriate model for our data."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:3961
msgid ""
"These three criteria can be accessed using "
"``xhydro.frequency_analysis.local.criteria``. The results are added to a "
"new ``criterion`` dimension. In this example, the AIC, BIC, and AICC all "
"provide a weak indication that the Generalized Extreme Value (GEV) "
"distribution is the best fit for the data, though the Gumbel distribution"
" may also be a suitable choice. Conversely, the Pearson III failed to "
"converge and the exponential distribution was rejected based on these "
"criteria, suggesting that they do not adequately fit the data."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:4568
msgid ""
"Finally, return periods can be obtained using "
"``xhfa.local.parametric_quantiles``."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:5182
msgid ""
"In a future release, plotting will be managed by a dedicated function. "
"For now, we demonstrate the process using preliminary utilities in this "
"notebook."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:5184
msgid ""
"The function ``xhfa.local._prepare_plots`` generates the data points "
"required to visualize the results of the frequency analysis. If "
"``log=True``, it will return log-spaced x-values between ``xmin`` and "
"``xmax``. Meanwhile, ``xhfa.local._get_plotting_positions`` calculates "
"plotting positions for all variables in the dataset. It accepts ``alpha``"
" and ``beta`` arguments. For typical values, refer to the `SciPy "
"documentation "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.mstats.plotting_positions.html>`__."
" By default, ``(0.4, 0.4)`` is used, which corresponds to the quantile "
"unbiased method (Cunnane)."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:5373
msgid "Uncertainties"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:5375
msgid ""
"Uncertainties are an important aspect of frequency analysis and should be"
" considered when interpreting results. These uncertainties often stem "
"from data quality, the choice of distribution, and the estimation of "
"parameters. While visualizations can provide insights into the model fit,"
" it’s crucial to quantify and account for uncertainties, such as "
"confidence intervals for parameter estimates, to ensure robust "
"conclusions."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:5377
msgid ""
"In order to manage computational intensity, we will focus on a single "
"catchment and limit the analysis to the two distributions that appeared "
"to best fit the data."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:5402
msgid "a) Bootstrapping the observations"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:5404
msgid ""
"One method for quantifying uncertainties is to bootstrap the "
"observations. In this example, we will perform bootstrapping a small "
"number of times to illustrate the process, though in practice, a higher "
"number of iterations (e.g., 5000) is recommended to obtain more reliable "
"estimates. Bootstrapping resamples the observed data with replacement to "
"generate multiple datasets, which can then be used to assess the "
"variability in the model's parameters and results."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:5406
msgid ""
"This can be accomplished by calling "
"``xhydro.frequency_analysis.uncertainties.bootstrap_obs``."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:6007
msgid ""
"This process will add a new dimension, ``samples``, to the dataset. When "
"used in conjunction with ``xhydro.frequency_analysis.local.fit``, a new "
"set of parameters will be computed for each sample. As a result, "
"bootstrapping can become computationally expensive, especially as the "
"number of bootstrap iterations increases."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:6529
msgid "b) Bootstrapping the distributions"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:6531
msgid ""
"In this approach, rather than resampling the observations directly, we "
"resample the fitted distributions to estimate the uncertainty. This "
"method allows us to assess the variability in the fitted distributions' "
"parameters. As with the previous example, we will perform a minimal "
"number of bootstrap iterations to reduce computational load, but in "
"practice, a higher number of iterations would provide more robust "
"estimates of uncertainty."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:6533
msgid ""
"This can be accomplished by calling "
"``xhydro.frequency_analysis.uncertainties.bootstrap_dist``. Unlike "
"``bootstrap_obs``, this method does not support lazy evaluation and "
"requires a specific function for the fitting step: "
"``xhydro.frequency_analysis.uncertainties.fit_boot_dist``."
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:7775
msgid "c) Comparison"
msgstr ""

#: ../../notebooks/local_frequency_analysis.ipynb:7777
msgid "Let's show the difference between both approaches."
msgstr ""
