# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Thomas-Charles Fortier Filion
# This file is distributed under the same license as the xHydro package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: xHydro 0.4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-03 11:23-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../notebooks/gis.ipynb:9
msgid "GIS operations"
msgstr ""

#: ../../notebooks/gis.ipynb:20
msgid ""
"Geographic Information System (GIS) operations are crucial in "
"hydrological analysis. This section illustrates how to leverage the "
"``xHydro`` library for performing key GIS tasks, including delineating "
"watershed boundaries and extracting critical physiographic, "
"climatological, and geographical variables at the watershed scale."
msgstr ""

#: ../../notebooks/gis.ipynb:50
msgid "Watershed delineation"
msgstr ""

#: ../../notebooks/gis.ipynb:61
msgid ""
"Currently, watershed delineation utilizes HydroSHEDS' `HydroBASINS "
"<https://www.hydrosheds.org/products/hydrobasins>`__ "
"(hybas_na_lev01-12_v1c) and is compatible with any location in North "
"America. The process involves identifying all upstream sub-basins from a "
"specified outlet and consolidating them into a unified watershed. The "
"`leafmap <https://leafmap.org/>`__ library is used to generate "
"interactive maps, which allow for the selection of outlets or the "
"visualization of the resulting watershed boundaries. While the use of the"
" map is not mandatory for performing the calculations, it greatly "
"enhances the visualization and understanding of the watershed delineation"
" process."
msgstr ""

#: ../../notebooks/gis.ipynb:83
msgid "|image_feneral.png|"
msgstr ""

#: ../../notebooks/gis.ipynb:85
msgid "image_feneral.png"
msgstr ""

#: ../../notebooks/gis.ipynb:97
msgid "a) From a list of coordinates"
msgstr ""

#: ../../notebooks/gis.ipynb:99
msgid ""
"A first option is to provide a list of coordinates. In the example below,"
" we select two pour points, with each one representing the outlet for the"
" watersheds of Montmorency and the Beaurivage River, respectively."
msgstr ""

#: ../../notebooks/gis.ipynb:124
msgid "b) From markers on a map"
msgstr ""

#: ../../notebooks/gis.ipynb:135
msgid ""
"Rather than using a list, a more interactive approach allows for directly"
" selecting outlets from the existing map ``m``, using the ``Draw a "
"marker`` button located on the left of the map. The image below "
"demonstrates how to select pour points by dragging markers to the desired"
" locations on the map."
msgstr ""

#: ../../notebooks/gis.ipynb:137
msgid "|image_marker.png|"
msgstr ""

#: ../../notebooks/gis.ipynb:139
msgid "image_marker.png"
msgstr ""

#: ../../notebooks/gis.ipynb:150
msgid ""
"After selecting points using either approach a) or b), or a combination "
"of both, we can initiate the watershed delineation calculation. This is "
"done using the function ``xhydro.gis.watershed_delineation``."
msgstr ""

#: ../../notebooks/gis.ipynb:384
msgid ""
"The outcomes are stored in a GeoPandas ``gpd.GeoDataFrame`` object, "
"enabling us to save the polygons in various common formats, such as ESRI "
"Shapefile or GeoJSON. If a map ``m`` is available, the polygons will be "
"automatically added to it. To visualize the map, simply type ``m`` in the"
" code cell to render it. If displaying the map directly is not compatible"
" with your notebook interpreter, you can use the following code to "
"extract the HTML from the map and plot it:"
msgstr ""

#: ../../notebooks/gis.ipynb:405
msgid "|image_gdf.png|"
msgstr ""

#: ../../notebooks/gis.ipynb:407
msgid "image_gdf.png"
msgstr ""

#: ../../notebooks/gis.ipynb:419
msgid "c) From `xdatasets <https://github.com/hydrologie/xdatasets>`__"
msgstr ""

#: ../../notebooks/gis.ipynb:421
msgid ""
"While automatically delineating watershed boundaries is a valuable tool, "
"users are encouraged to utilize official watershed boundaries when "
"available, rather than generating new ones. The `xdatasets "
"<https://github.com/hydrologie/xdatasets>`__ library, for example, hosts "
"a few official boundaries that can be accessed using the "
"``xdatasets.Query`` function. As of today, the following watershed "
"sources are available:"
msgstr ""

#: ../../notebooks/gis.ipynb:424
msgid "Source"
msgstr ""

#: ../../notebooks/gis.ipynb:424
msgid "Dataset name"
msgstr ""

#: ../../notebooks/gis.ipynb:426
msgid ""
"`(Canada) National Water Data Archive: HYDAT <https://www.canada.ca/en"
"/environment-climate-change/services/water-"
"overview/quantity/monitoring/survey/data-products-services/national-"
"archive-hydat.html>`__"
msgstr ""

#: ../../notebooks/gis.ipynb:426
msgid "hydat_polygons"
msgstr ""

#: ../../notebooks/gis.ipynb:428
msgid ""
"`(Quebec) Provincial Ministry of Environment (MELCCFP/DPEH) "
"<https://www.cehq.gouv.qc.ca/atlas-hydroclimatique/stations-"
"hydrometriques/index.htm>`__"
msgstr ""

#: ../../notebooks/gis.ipynb:428
msgid "deh_polygons"
msgstr ""

#: ../../notebooks/gis.ipynb:430
msgid "`(Quebec) Hydro-Quebec <https://www.hydroquebec.com/>`__"
msgstr ""

#: ../../notebooks/gis.ipynb:430
msgid "hq_polygons"
msgstr ""

#: ../../notebooks/gis.ipynb:544
msgid "Extraction of watershed properties"
msgstr ""

#: ../../notebooks/gis.ipynb:555
msgid ""
"Once the watershed boundaries are obtained, we can extract valuable "
"properties such as geographical information, land use classification, and"
" climatological data from the delineated watersheds."
msgstr ""

#: ../../notebooks/gis.ipynb:567
msgid "a) Geographical watershed properties"
msgstr ""

#: ../../notebooks/gis.ipynb:569
msgid ""
"First, ``xhydro.gis.watershed_properties`` can be used to extract the "
"geographical properties of the watershed, including the perimeter, total "
"area, Gravelius coefficient, and basin centroid. It is important to note "
"that this function returns all the columns present in the provided "
"``gpd.GeoDataFrame`` argument."
msgstr ""

#: ../../notebooks/gis.ipynb:811
msgid ""
"For added convenience, we can also retrieve the same results in the form "
"of an ``xarray.Dataset``:"
msgstr ""

#: ../../notebooks/gis.ipynb:1285
msgid "b) Surface properties"
msgstr ""

#: ../../notebooks/gis.ipynb:1287
msgid ""
"We can use ``xhydro.gis.surface_properties`` to extract surface "
"properties for the same ``gpd.GeoDataFrame``, such as slope and aspect. "
"By default, these properties are calculated using `Copernicus' GLO-90 "
"Digital Elevation Model "
"<https://portal.opentopography.org/raster?opentopoID=OTSDEM.032021.4326.1>`__"
" as of 2021-04-22. However, both the source and the date can be modified "
"through the function's arguments."
msgstr ""

#: ../../notebooks/gis.ipynb:1594
msgid ""
"Again, for convenience, we can output the results in ``xarray.Dataset`` "
"format :"
msgstr ""

#: ../../notebooks/gis.ipynb:2105
msgid "c) Land use classification"
msgstr ""

#: ../../notebooks/gis.ipynb:2107
msgid ""
"Finally, we can retrieve land use classifications using "
"``xhydro.gis.land_use_classification``. This function is powered by the "
"Planetary Computer's STAC catalog and, by default, uses the `10m Annual "
"Land Use Land Cover (9-class) V2 "
"<https://planetarycomputer.microsoft.com/dataset/io-lulc-annual-v02>`__ "
"dataset (\"io-lulc-annual-v02\"). However, alternative collections can be"
" specified as arguments to the function."
msgstr ""

#: ../../notebooks/gis.ipynb:2784
msgid "d) Climate indicators"
msgstr ""

#: ../../notebooks/gis.ipynb:2786
msgid ""
"The extraction of climate indicators is the most complex step, as it "
"requires accessing a weather dataset, then subsetting and averaging the "
"data over the various watersheds within the ``GeoDataFrame`` object. "
"These steps are outside the scope of ``xHydro``, and users will need to "
"rely on other libraries for this task. One approach, outlined in the `Use"
" Case Example <use_case.ipynb>`__, involves using a combination of "
"``xscen`` and ``xESMF``. Another approach, demonstrated here, utilizes "
"``xdatasets``. Indeed, ``xdatasets`` enables the extraction of all the "
"pixels from a gridded dataset within a watershed while accounting for the"
" weighting of each pixel intersecting the watershed."
msgstr ""

#: ../../notebooks/gis.ipynb:2789
msgid ""
"For this example, we will use ERA5-Land reanalysis data covering the "
"period from 1981 to 2010 as our climatological dataset."
msgstr ""

#: ../../notebooks/gis.ipynb:2889
msgid ""
"Because the next steps utilize `xclim "
"<https://xclim.readthedocs.io/en/stable/index.html>`__ under the hood, "
"the dataset must be `CF-compliant <https://cfconventions.org/cf-"
"conventions/cf-conventions.html>`__. At a minimum, the "
"``xarray.DataArray`` used should adhere to the following principles:"
msgstr ""

#: ../../notebooks/gis.ipynb:2891
msgid ""
"The dataset must include a ``time`` dimension, typically at a daily "
"frequency, with no missing timesteps (although NaNs are supported). If "
"your data deviates from this format, extra caution should be taken when "
"interpreting the results."
msgstr ""

#: ../../notebooks/gis.ipynb:2892
msgid ""
"If there is a 1D spatial dimension, such as ``HYBAS_ID`` in the example "
"below, it must have an attribute ``cf_role`` with the value "
"``timeseries_id``."
msgstr ""

#: ../../notebooks/gis.ipynb:2893
msgid ""
"The variable must include at least a ``units`` attribute. While not "
"mandatory, other attributes such as ``long_name`` and ``cell_methods`` "
"are expected by ``xclim``, and warnings will be raised if they are "
"missing."
msgstr ""

#: ../../notebooks/gis.ipynb:2894
msgid "Variable names should match those supported by ``xclim``."
msgstr ""

#: ../../notebooks/gis.ipynb:2896
msgid ""
"The following code will format the ERA5-Land data obtained from "
"``xdatasets`` to add missing metadata and change the variable names and "
"units:"
msgstr ""

#: ../../notebooks/gis.ipynb:3442
msgid ""
"Climate indicators can be calculated in various ways, and for most simple"
" tasks, directly using ``xclim`` is always a viable option. ``xclim`` "
"offers an extensive `list of available indicators "
"<https://xclim.readthedocs.io/en/stable/indicators.html>`__ within a "
"user-friendly and flexible framework."
msgstr ""

#: ../../notebooks/gis.ipynb:3936
msgid ""
"For more complex tasks, or when computing multiple indicators "
"simultaneously, ``xhydro.indicators.compute_indicators`` is often the "
"preferred method. This function allows users to build and pass multiple "
"indicators at once, either by providing a list of custom indicators "
"created with ``xclim.core.indicator.Indicator.from_dict`` (see the INFO "
"box below) or by referencing a YAML file (see `the ``xscen`` "
"documentation "
"<https://xscen.readthedocs.io/en/latest/notebooks/2_getting_started.html"
"#Computing-indicators>`__)."
msgstr ""

#: ../../notebooks/gis.ipynb:3943
msgid "INFO"
msgstr ""

#: ../../notebooks/gis.ipynb:3945
msgid ""
"Custom indicators in ``xHydro`` are built by following the YAML "
"formatting required by ``xclim``."
msgstr ""

#: ../../notebooks/gis.ipynb:3947
msgid ""
"A custom indicator built using "
"``xclim.core.indicator.Indicator.from_dict`` will need these elements:"
msgstr ""

#: ../../notebooks/gis.ipynb:3949
msgid "\"data\": A dictionary with the following information:"
msgstr ""

#: ../../notebooks/gis.ipynb:3951
msgid ""
"\"base\": The \"YAML ID\" obtained from `here "
"<https://xclim.readthedocs.io/en/stable/indicators.html>`__."
msgstr ""

#: ../../notebooks/gis.ipynb:3952
msgid ""
"\"input\": A dictionary linking the default xclim input to the name of "
"your variable. Needed only if it is different. In the link above, they "
"are the string following \"Uses:\"."
msgstr ""

#: ../../notebooks/gis.ipynb:3953
msgid ""
"\"parameters\": A dictionary containing all other parameters for a given "
"indicator. In the link above, the easiest way to access them is by "
"clicking the link in the top-right corner of the box describing a given "
"indicator."
msgstr ""

#: ../../notebooks/gis.ipynb:3954
msgid ""
"More entries can be used here, as described `in the xclim documentation "
"<https://xclim.readthedocs.io/en/latest/api.html#yaml-file-structure>`__ "
"under \"identifier\"."
msgstr ""

#: ../../notebooks/gis.ipynb:3956
msgid ""
"\"identifier\": A custom name for your indicator. This will be the name "
"returned in the results."
msgstr ""

#: ../../notebooks/gis.ipynb:3957
msgid ""
"\"module\": Needed, but can be anything. To prevent an accidental "
"overwriting of ``xclim`` indicators, it is best to use something "
"different from: [\"atmos\", \"land\", \"generic\"]."
msgstr ""

#: ../../notebooks/gis.ipynb:4672
msgid ""
"Finally, ``xhydro.indicators.get_yearly_op``, also built upon the "
"``xclim`` library, provides a flexible method for obtaining yearly values"
" of specific statistics, such as annual or seasonal maxima. This can be "
"particularly useful, for instance, when extracting raw data needed for "
"frequency analyses."
msgstr ""

#: ../../notebooks/gis.ipynb:4852
msgid ""
"The ``timeargs`` argument relies on indexers that are compatible with "
"``xclim.core.calendar.select_time``. Four types of indexers are currently"
" accepted:"
msgstr ""

#: ../../notebooks/gis.ipynb:4854
msgid "``month``, followed by a sequence of month numbers."
msgstr ""

#: ../../notebooks/gis.ipynb:4855
msgid ""
"``season``, followed by one or more of ``'DJF'``, ``'MAM'``, ``'JJA'``, "
"and ``'SON'``."
msgstr ""

#: ../../notebooks/gis.ipynb:4856
msgid ""
"``doy_bounds``, followed by a sequence representing the inclusive bounds "
"of the period to be considered (``'start'``, ``'end'``)."
msgstr ""

#: ../../notebooks/gis.ipynb:4857
#, python-format
msgid ""
"``date_bounds``, similar to ``doy_bounds``, but using a month-day "
"(``'%m-%d'``) format."
msgstr ""

#: ../../notebooks/gis.ipynb:4859
msgid ""
"Subsequently, we specify the operations to be calculated for each "
"variable. Supported operations include ``\"max\"``, ``\"min\"``, "
"``\"mean\"``, and ``\"sum\"``."
msgstr ""

#: ../../notebooks/gis.ipynb:4890
msgid ""
"The combination of ``timeargs`` and ``operations`` through the Cartesian "
"product enables the efficient generation of a comprehensive array of "
"climate indicators."
msgstr ""

#: ../../notebooks/gis.ipynb:5474
msgid "The same data can also be visualized as a ``pd.DataFrame`` as well :"
msgstr ""
