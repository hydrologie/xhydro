# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Thomas-Charles Fortier Filion
# This file is distributed under the same license as the xHydro package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: xHydro 0.5.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-08-05 13:06-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:9
msgid "Hydrological modelling - Raven (distributed)"
msgstr "Modélisation hydrologique - Raven (modèles distribués)"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:11
msgid ""
"``xHydro`` provides a collection of functions designed to facilitate "
"hydrological modelling, focusing on two key models: `HYDROTEL "
"<https://github.com/INRS-Modelisation-hydrologique/hydrotel>`__ and a "
"suite of models emulated by the `Raven Hydrological Framework "
"<https://raven.uwaterloo.ca/>`__. It is important to note that Raven "
"already possesses an extensive Python library, `RavenPy "
"<https://github.com/CSHS-CWRA/RavenPy>`__, which enables users to build, "
"calibrate, and execute models. ``xHydro`` wraps some of these functions "
"to support multi-model assessments with HYDROTEL, though users seeking "
"advanced functionalities may prefer to use ``RavenPy`` directly."
msgstr ""
"``xHydro`` propose une collection de fonctions conçues pour faciliter la "
"modélisation hydrologique, en se concentrant sur deux modèles clés : "
"`HYDROTEL <https://github.com/INRS-Modelisation-hydrologique/hydrotel>`__"
" et une suite de modèles émulés par le `Raven Hydrological Framework "
"<https://raven.uwaterloo.ca/>`__. Il est important de noter que Raven "
"dispose déjà d'une vaste librairie Python, `RavenPy <https://github.com"
"/CSHS-CWRA/RavenPy>`__, qui permet aux utilisateurs de construire, "
"calibrer et exécuter des modèles. ``xHydro`` encapsule certaines de ces "
"fonctions pour soutenir les évaluations multi-modèles avec HYDROTEL, mais"
" les utilisateurs recherchant des fonctionnalités avancées préféreront "
"utiliser ``RavenPy`` directement."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:14
msgid ""
"The primary contribution of ``xHydro`` to hydrological modelling is thus "
"its support for HYDROTEL, a model that previously lacked a dedicated "
"Python library. This Notebook covers ``RavenPy`` models, but a similar "
"notebook for ``HYDROTEL`` is available `here "
"<hydrological_modelling_hydrotel.ipynb>`__."
msgstr ""
"La principale contribution de ``xHydro`` à la modélisation hydrologique "
"est donc son support pour HYDROTEL, un modèle qui manquait auparavant "
"d'une librairie Python dédiée. Ce Notebook couvre les modèles "
"``RavenPy``, mais un Notebook similaire pour ``HYDROTEL`` est disponible "
"`ici <hydrological_modelling_hydrotel.ipynb>`__."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:17
msgid "Basic information"
msgstr "Informations de base"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:42
msgid ""
"The ``xHydro`` modelling framework is based on a ``model_config`` "
"dictionary, which is meant to contain all necessary information to "
"execute a given hydrological model. For example, depending on the model, "
"it can store meteorological datasets directly, paths to datasets (netCDF "
"files or other), csv configuration files, parameters, and basically "
"anything that is required to configure and execute an hydrological model."
msgstr ""
"Le cadre de modélisation ``xHydro`` est basé sur un dictionnaire "
"``model_config``, qui est censé contenir toutes les informations "
"nécessaires pour exécuter un modèle hydrologique donné. Par exemple, en "
"fonction du modèle, il peut stocker directement les jeux de données "
"météorologiques, les chemins vers ces jeux de données (fichiers netCDF ou"
" autres), les fichiers de configuration csv, les paramètres, et "
"fondamentalement tout ce qui est nécessaire pour configurer et exécuter "
"un modèle hydrologique."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:44
msgid ""
"The list of required inputs for the dictionary can be obtained one of two"
" ways. The first is to look at the hydrological model's class, such as "
"``xhydro.modelling.RavenpyModel``. The second is to use the "
"``xh.modelling.get_hydrological_model_inputs`` function to get a list of "
"the required keys for a given model, as well as the documentation."
msgstr ""
"La liste des entrées requises pour le dictionnaire peut être obtenue de "
"deux façons. La première consiste à regarder la classe du modèle "
"hydrologique, comme ``xhydro.modelling.RavenpyModel``. La seconde "
"consiste à utiliser la fonction "
"``xh.modelling.get_hydrological_model_inputs`` pour obtenir la liste des "
"clés requises pour un modèle donné, ainsi que sa documentation."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:84
msgid ""
"HYDROTEL and Raven vary in terms of required inputs and available "
"functions, but an effort will be made to standardize the outputs as much "
"as possible. Currently, all models include the following three functions:"
msgstr ""
"HYDROTEL et Raven varient en termes d'entrées requises et de fonctions "
"disponibles, mais un effort sera fait pour standardiser les sorties "
"autant que possible. Actuellement, tous les modèles incluent les trois "
"fonctions suivantes :"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:86
msgid ""
"``.run()``: Executes the model, reformats the outputs to be compatible "
"with analysis tools in ``xHydro``, and returns the simulated streamflow "
"as a ``xarray.Dataset``."
msgstr ""
"``.run()`` : Exécute le modèle, reformate les sorties pour être "
"compatibles avec les outils d'analyse dans ``xHydro``, et retourne le "
"débit simulé en tant que ``xarray.Dataset``."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:88
msgid ""
"The streamflow variable will be named ``q`` and will have units of ``m3 "
"s-1``."
msgstr "La variable de débit sera nommée ``q`` et aura pour unités ``m3 s-1``."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:89
msgid ""
"For 1D data (such as hydrometric stations), the corresponding dimension "
"in the dataset will be identified by the ``cf_role: timeseries_id`` "
"attribute."
msgstr ""
"Pour les données 1D (comme les stations hydrométriques), la dimension "
"correspondante dans le jeux de données sera identifiée par l'attribut "
"``cf_role: timeseries_id``."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:91
msgid "``.get_inputs()``: Retrieves the meteorological inputs used by the model."
msgstr ""
"``.get_inputs()`` : Récupère les entrées météorologiques utilisées par le"
" modèle."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:93
msgid ""
"``.get_streamflow()``: Retrieves the simulated streamflow output from the"
" model."
msgstr "``.get_streamflow()`` : Récupère la sortie de débit simulé du modèle."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:105
msgid "Initializing and running a calibrated model"
msgstr "Initialisation et exécution d'un modèle calé"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:107
msgid ""
"Raven requires several ``.rv*`` files to control various aspects such as "
"meteorological inputs, watershed characteristics, and more. Currently, "
"``RavenPy`` provides no straightforward way to open and modify these "
"files. For instance, changing simulation dates or meteorological data "
"directly through the files is not yet supported. Until this feature is "
"added, all relevant information must be provided to ``RavenPy`` via the "
"``model_config`` dictionary in order to successfully run the model."
msgstr ""
"Raven nécessite plusieurs fichiers ``.rv*`` pour gérer divers aspects "
"tels que les entrées météorologiques, les caractéristiques du bassin "
"versant, et plus encore. Actuellement, ``RavenPy`` ne permet pas d'ouvrir"
" et de modifier facilement ces fichiers. Par exemple, il n'est pas encore"
" possible de modifier directement les dates de simulation ou les données "
"météorologiques dans les fichiers. En attendant que cette fonctionnalité "
"soit ajoutée, toutes les informations pertinentes doivent être fournies à"
" ``RavenPy`` via le dictionnaire ``model_config`` afin d'exécuter "
"correctement le modèle."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:109
msgid ""
"If the project directory already exists and contains data, ``xHydro`` "
"will prepare the model for execution without overwriting existing "
"``.rv*`` files—unless the ``overwrite`` argument is explicitly set to "
"``True``. To force overwriting of these files, you can thus either:"
msgstr ""
"Si le répertoire du projet existe déjà et contient des données, "
"``xHydro`` préparera le modèle pour l'exécution sans écraser les fichiers"
" ``.rv*`` existants — sauf si l'argument ``overwrite`` est explicitement "
"défini à ``True``. Pour forcer l’écrasement de ces fichiers, vous pouvez "
"donc :"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:111
msgid ""
"Set ``overwrite=True`` in the ``model_config`` when instantiating the "
"model"
msgstr ""
"Définir ``overwrite=True`` dans ``model_config`` lors de l'instanciation "
"du modèle"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:112
msgid ""
"Use the ``.create_rv(*args, overwrite=True, **kwargs)`` method on the "
"instantiated model. Note that if using that option, all necessary "
"arguments need to be provided again."
msgstr ""
"Utiliser la méthode ``.create_rv(*args, overwrite=True, **kwargs)`` sur "
"le modèle instancié. Notez que si vous utilisez cette option, tous les "
"arguments nécessaires doivent être fournis à nouveau."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:114
msgid ""
"This Notebook will focus on distributed RavenPy models. For lumped "
"models, refer to the `Raven lumped modelling notebook "
"<hydrological_modelling_raven.ipynb>`__."
msgstr ""
"Ce Notebook se concentrera sur les modèles RavenPy distribués. Pour les "
"modèles globaux, consultez le `Notebook Raven de modélisation globale "
"<hydrological_modelling_raven.ipynb>`__."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:117
msgid "Formatting HRU Data for distributed models"
msgstr "Formatage des données HRU pour les modèles distribués"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:119
msgid ""
"Raven relies on Hydrological Response Units (HRUs) for its hydrological "
"simulations. Distributed models require a long list of HRU attributes, "
"which is not yet fully supported by ``xHydro``. Users are encouraged to "
"consult the `BasinMaker documentation "
"<https://hydrology.uwaterloo.ca/basinmaker/>`__ for a complete list of "
"HRU attributes, and specifically the 'data specification file' available "
"on their homepage. For distributed modelling, ``xHydro`` calls upon the "
"``BasinMakerExtractor`` class of ``RavenPy`` to extract HRU data from a "
"shapefile, so users must ensure that their shapefile is formatted "
"correctly."
msgstr ""
"Raven s'appuie sur les Unités de Réponse Hydrologique (HRU) pour ses "
"simulations hydrologiques. Les modèles distribués nécessitent une longue "
"liste d'attributs de HRU, qui n'est pas encore entièrement prise en charge "
"par ``xHydro``. Les utilisateurs sont encouragés à consulter la "
"documentation de `BasinMaker `<https://hydrology.uwaterloo.ca/basinmaker/>`__ "
"pour une liste complète d'attributs de HRU, et en particulier le "
"fichier de spécification des données disponible sur leur page d'accueil. "
"Pour la modélisation distribuée, ``xHydro`` utilise la classe "
"``BasinMakerExtractor`` de ``RavenPy`` pour extraire les données HRU "
"à partir d'un shapefile, donc les utilisateurs doivent s'assurer que leur"
" shapefile est correctement formaté."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:122
msgid ""
"Additionally, while BasinMaker will produce attributes such as "
"``Landuse_ID``, these will not be passed on to the ``RavenPy`` model. "
"Instead, the HRU should contain relevant land use attributes that can be "
"directly mapped to the hydrological model's arguments. For example, for "
"the HBV-EC model, which is currently the only distributed model available"
" in ``Raven``, the following attributes are used instead: ``LAND_USE_C``,"
" ``VEG_C``, and ``SOIL_PROF``, which represent land use, vegetation, and "
"soil profile respectively."
msgstr ""
"De plus, bien que BasinMaker produise des attributs tels que "
"``Landuse_ID``, ceux-ci ne seront pas transmis au modèle ``RavenPy``. "
"Au lieu de cela, le HRU doit contenir des attributs d'utilisation du sol "
"pertinents qui peuvent être directement mappés aux arguments du modèle "
"hydrologique. Par exemple, pour le modèle HBV-EC, qui est actuellement "
"le seul modèle distribué disponible dans ``Raven``, les attributs suivants"
" sont utilisés à la place : ``LAND_USE_C``, ``VEG_C``, "
" et ``SOIL_PROF``, qui représentent respectivement l'utilisation du sol, "
"la végétation et le profil du sol."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:129
#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:207
#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:225
msgid "INFO"
msgstr "INFO"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:131
msgid ""
"By default, HBV-EC as defined in ``RavenPy`` only understands a unique "
"``LAND_USE_C`` (``LU_ALL``), ``VEG_C`` (``VEG_ALL``), and ``SOIL_PROF`` "
"(``DEFAULT_P``). If you want to use different classes, you will need to "
"modify the ``model_config`` dictionary to include the relevant keys. "
"There is currently no good documentation on how to do this, but you can "
"refer to the class definition of the ``HBVEC`` model in "
"``ravenpy.config.emulators.hbvec.py``."
msgstr ""
"Par défaut, HBV-EC tel que défini dans ``RavenPy`` ne comprend qu'un "
"unique ``LAND_USE_C`` (``LU_ALL``), ``VEG_C`` (``VEG_ALL``), et "
"``SOIL_PROF`` (``DEFAULT_P``). Si vous souhaitez utiliser différentes "
"classes, vous devrez modifier le dictionnaire ``model_config`` pour y "
"inclure les clés pertinentes. Il n'y a actuellement pas de bonne "
"documentation sur la façon de procéder, mais vous pouvez vous référer à "
"la définition de la classe du modèle ``HBVEC`` dans "
"``ravenpy.config.emulators.hbvec.py``."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:133
msgid ""
"As an example, new vegetation classes can be added by modifying the "
"``VegetationClasses`` and ``VegetationParameterList`` keys with new "
"entries detailing all the vegetation classes and their parameters. The "
"same applies to land use and soil profile classes."
msgstr ""
"Par exemple, de nouvelles classes de végétation peuvent être ajoutées en"
" modifiant les clés ``VegetationClasses`` et ``VegetationParameterList`` "
"avec de nouvelles entrées détaillant toutes les classes de végétation et "
"leurs paramètres. Il en va de même pour les classes d'utilisation du sol "
"et de profil de sol."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:201
msgid "Formatting Meteorological Data"
msgstr "Formatage des données météorologiques"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:209
msgid ""
"If using multiple meteorological stations, it is recommended to add the "
"``Interpolation`` argument to ``model_config`` or the ``RavenpyModel`` "
"call to control the interpolation algorithm. Raven uses the nearest "
"neighbour method by default, but other options are available:"
msgstr ""
"Si vous utilisez plusieurs stations météorologiques, il est recommandé "
"d'ajouter l'argument ``Interpolation`` dans ``model_config`` ou lors de "
"l'appel à ``RavenpyModel`` afin de contrôler l'algorithme "
"d'interpolation. Raven utilise par défaut la méthode du plus proche "
"voisin, mais d'autres options sont disponibles :"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:211
msgid "``INTERP_NEAREST_NEIGHBOR`` (default) — Nearest neighbor (Voronoi) method"
msgstr ""
"``INTERP_NEAREST_NEIGHBOR`` (par défaut) — Méthode du plus proche voisin "
"(Voronoï)"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:212
msgid "``INTERP_INVERSE_DISTANCE`` — Inverse distance weighting"
msgstr "``INTERP_INVERSE_DISTANCE`` — Pondération par distance inverse"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:213
msgid ""
"``INTERP_INVERSE_DISTANCE_ELEVATION`` — Inverse distance weighting with "
"consideration of elevation"
msgstr ""
"``INTERP_INVERSE_DISTANCE_ELEVATION`` — Pondération par distance inverse "
"avec prise en compte de l'altitude"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:214
msgid "``INTERP_AVERAGE_ALL`` — Averages all specified gauge readings"
msgstr "``INTERP_AVERAGE_ALL`` — Moyenne de toutes les stations spécifiées"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:215
msgid ""
"``INTERP_FROM_FILE [filename]`` — Weights for each gauge at each HRU are "
"specified in an external file. This method should work via ``xHydro``, "
"but it has not been fully tested."
msgstr ""
"``INTERP_FROM_FILE [nom_fichier]`` — Les poids pour chaque station à "
"chaque HRU sont spécifiés dans un fichier externe. Cette méthode devrait "
"fonctionner via ``xHydro``, mais elle n'a pas encore été entièrement "
"testée."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:227
msgid ""
"When using gridded meteorological data, ``xHydro`` uses functions from "
"``RavenPy`` to compute weights for each grid cell based on the HRU's "
"geometry."
msgstr ""
"Lors de l'utilisation de données météorologiques maillées, ``xHydro`` "
"utilise des fonctions de ``RavenPy`` pour calculer les poids de chaque "
"cellule de la grille en fonction de la géométrie du HRU."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:228
msgid "Ensure that the domain of the grid completely covers the watershed."
msgstr ""
"Assurez-vous que le domaine de la grille couvre entièrement le bassin "
"versant."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:234
msgid ""
"The acquisition of raw meteorological data is covered in the `GIS "
"notebook <gis.ipynb>`__ and `Use Case Example <use_case.ipynb>`__ "
"notebooks. Therefore, this notebook will use a test dataset."
msgstr ""
"L'acquisition de données météorologiques brutes est couverte dans le "
"Notebook `GIS <gis.ipynb>`__ et l'`Exemple de cas d'utilisation "
"<use_case.ipynb>`__. Par conséquent, ce Notebook utilisera un jeu de "
"données de test."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:277
msgid ""
"Every hydrological model has different requirements when it comes to "
"their input data. In this example, the data above has multiple issues "
"that would be not compatible with the requirements for Raven. For "
"reference on default units expected by Raven, consult `this link "
"<https://ravenpy.readthedocs.io/en/latest/_modules/ravenpy/config/defaults.html#>`__."
msgstr ""
"Chaque modèle hydrologique a des exigences différentes en ce qui concerne"
" ses données d'entrée. Dans cet exemple, les données ci-dessus présentent"
" plusieurs problèmes qui ne seraient pas compatibles avec les exigences "
"de Raven. Pour référence sur les unités par défaut attendues par Raven, "
"consultez `ce lien <https://ravenpy.readthedocs.io/en/latest/_modules/ravenpy/config/defaults.html#>`__."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:279
msgid ""
"The function ``xh.modelling.format_input`` can be used to reformat CF-"
"compliant datasets for use in hydrological models."
msgstr ""
"La fonction ``xh.modelling.format_input`` peut être utilisée pour "
"reformater les jeux de données conformes aux normes CF pour une "
"utilisation dans les modèles hydrologiques."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:314
msgid ""
"While RavenPy does not require a configuration file to accompany the "
"meteorological file, many information must be given to ``model_config`` "
"to properly instantiate the model. The second output of ``format_input`` "
"will return the \"meteo_file\", \"data_type\", \"alt_names_meteo\", and "
"\"meteo_station_properties\" entries based on the provided file."
msgstr ""
"Bien que RavenPy ne nécessite pas de fichier de configuration pour "
"accompagner le fichier météorologique, de nombreuses informations doivent"
" être fournies à ``model_config`` pour instancier correctement le modèle."
" Le deuxième résultat de ``format_input`` renverra les entrées "
"\"meteo_file\", \"data_type\", \"alt_names_meteo\", et "
"\"meteo_station_properties\" basées sur le fichier fourni."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:337
msgid "Initializing the Model"
msgstr "Initialisation du modèle"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:339
msgid "The model can now be initialized using the information acquired so far."
msgstr ""
"Le modèle peut maintenant être initialisé en utilisant les informations "
"acquises jusqu'à présent."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:340
msgid ""
"Additional entries can be provided to the ``model_config`` dictionary, as"
" long as they are supported by the emulated Raven model. In particular:"
msgstr ""
"Des entrées supplémentaires peuvent être fournies au dictionnaire "
"``model_config``, tant qu'elles sont prises en charge par le modèle "
"émulé par Raven. En particulier :"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:342
msgid ""
"The ``output_subbasins`` key can be used to specify which subbasins to "
"output."
msgstr ""
"La clé ``output_subbasins`` peut être utilisée pour spécifier "
"quels sous-bassins doivent être inclus dans la sortie."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:343
msgid ""
"The ``global_parameter`` key must have a value for ``AVG_ANNUAL_RUNOFF``,"
" which is the average annual runoff in mm/year (with a range of 0-1000 "
"according the Raven's documentation). This value is required for "
"distributed models."
msgstr ""
"La clé ``global_parameter`` doit avoir une valeur pour "
"``AVG_ANNUAL_RUNOFF``, qui est le ruissellement annuel moyen en mm/an "
"(avec une plage de 0-1000 selon la documentation de Raven). Cette valeur "
"est requise pour les modèles distribués."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:345
msgid ""
"Refer to the `Raven documentation "
"<https://raven.uwaterloo.ca/Downloads.html>`__ for the most up-to-date "
"information."
msgstr ""
"Consultez la `documentation de Raven "
"<https://raven.uwaterloo.ca/Downloads.html>`__ pour obtenir les "
"informations les plus récentes."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:346
msgid ""
"Model templates are currently listed in Appendix F, while the available "
"options are described in various chapters."
msgstr ""
"Les modèles types sont actuellement listés dans l'annexe F, tandis que "
"les options disponibles sont décrites dans différents chapitres."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:402
msgid ""
"With ``model_config`` on hand, an instance of the hydrological model can "
"be initialized using ``xhydro.modelling.hydrological_model`` or the "
"``xhydro.modelling.RavenpyModel`` class directly."
msgstr ""
"Une fois ``model_config`` en main, une instance du modèle hydrologique "
"peut être initialisée en utilisant "
"``xhydro.modelling.hydrological_model`` ou directement la classe "
"``xhydro.modelling.RavenpyModel``."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:424
msgid "Validating the Meteorological Data"
msgstr "Validation des données météorologiques"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:426
msgid ""
"Before executing hydrological models, a few basic checks will be "
"performed automatically. However, users may want to conduct more advanced"
" health checks on the meteorological inputs (e.g., identifying "
"unrealistic values). This can be done using "
"``xhydro.utils.health_checks``. For the full list of available checks, "
"refer to `the 'xscen' documentation "
"<https://xscen.readthedocs.io/en/latest/notebooks/3_diagnostics.html"
"#Health-checks>`__."
msgstr ""
"Avant d'exécuter les modèles hydrologiques, quelques vérifications de "
"base seront effectuées automatiquement. Cependant, les utilisateurs "
"peuvent souhaiter effectuer des contrôles de santé plus avancés sur les "
"données météorologiques (par exemple, identifier des valeurs "
"irréalistes). Cela peut être fait en utilisant "
"``xhydro.utils.health_checks``. Pour la liste complète des contrôles "
"disponibles, consultez la documentation de `xscen "
"<https://xscen.readthedocs.io/en/latest/notebooks/3_diagnostics.html"
"#Health-checks>`__."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:428
msgid ""
"We can use ``.get_inputs()`` to automatically retrieve the meteorological"
" data. In this example, we'll ensure there are no abnormal meteorological"
" values or sequences of values."
msgstr ""
"Nous pouvons utiliser ``.get_inputs()`` pour récupérer automatiquement "
"les données météorologiques. Dans cet exemple, nous nous assurerons qu'il"
" n'y a pas de valeurs ou de séquences de valeurs météorologiques "
"anormales."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:479
msgid "Executing the Model"
msgstr "Exécution du modèle"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:481
msgid ""
"A few basic checks are performed when the ``.run()`` function is called, "
"before executing the model itself. However, since both RavenPy and Raven "
"will perform a series of checkups themselves, they are kept at a minimum "
"in ``xHydro``."
msgstr ""
"Quelques vérifications de base sont effectuées lorsque la fonction "
"``.run()`` est appelée, avant d'exécuter le modèle lui-même. Cependant, "
"puisque RavenPy et Raven effectueront eux-mêmes une série de vérifications,"
" elles sont maintenues au minimum dans ``xHydro``."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:483
msgid ""
"Once the model is executed, ``xHydro`` will automatically reformat the "
"NetCDF file to bring it closer to CF conventions, ensuring compatibility "
"with other ``xHydro`` modules. Note that, at this time, this reformatting"
" only supports the outgoing streamflow."
msgstr ""
"Une fois le modèle exécuté, ``xHydro`` reformatera automatiquement le "
"fichier NetCDF pour le rapprocher des conventions CF, assurant ainsi la "
"compatibilité avec les autres modules ``xHydro``. Notez qu'en ce moment, "
"ce reformatage soutient uniquement le débit sortant."

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:514
msgid "Model Calibration"
msgstr "Calage du modèle"

#: ../../notebooks/hydrological_modelling_raven_distributed.ipynb:516
msgid ""
"Calibrating distributed models is not yet supported by ``xHydro`` if "
"multiple hydrometric stations are used. Users are encouraged to use the "
"``RavenPy`` library directly for this purpose. For single-station "
"calibration, ``xHydro`` can be used. Refer to the `lumped RavenPy "
"documentation <hydrological_modelling_raven.ipynb>`__ for more details."
msgstr ""
"Le calage des modèles distribués n'est pas encore pris en charge par "
"``xHydro`` si plusieurs stations hydrométriques sont utilisées. Les "
"utilisateurs sont encouragés à utiliser directement la librairie "
"``RavenPy`` à cette fin. Pour le calage à une station unique, ``xHydro`` "
"peut être utilisé. Consultez la `documentation de RavenPy pour les modèles globaux "
"<hydrological_modelling_raven.ipynb>`__ pour plus de détails."
