# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Thomas-Charles Fortier Filion
# This file is distributed under the same license as the xHydro package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: xHydro 0.4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-03 11:23-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../notebooks/optimal_interpolation.ipynb:9
msgid "Optimal interpolation"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:20
msgid ""
"Optimal interpolation is a method used to combine spatially distributed "
"data (the \"background field\") with point-based observations. This "
"technique adjusts the entire field by incorporating deviations between "
"the observed data and the field at the observation points, resulting in a"
" statistically optimal adjustment of the background field. For example, "
"it can be used to blend reanalysis precipitation data (such as ERA5) with"
" actual observational records, ensuring that the reanalysis precipitation"
" is corrected over the entire domain."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:23
msgid ""
"This page demonstrates how to use ``xHydro`` to perform optimal "
"interpolation for hydrological modeling by integrating field-like "
"simulations with point observations. In this case, the background field "
"consists of outputs from a distributed hydrological model, while the "
"point observations correspond to real hydrometric station measurements. "
"The goal is to correct the background field (i.e., the hydrological model"
" outputs) using optimal interpolation techniques, following the approach "
"outlined in Lachance-Cloutier et al. (2017)."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:26
msgid ""
"*Lachance-Cloutier, S., Turcotte, R. and Cyr, J.F., 2017. Combining "
"streamflow observations and hydrologic simulations for the retrospective "
"estimation of daily streamflow for ungauged rivers in southern Quebec "
"(Canada). Journal of hydrology, 550, pp.294-306.*"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:28
msgid ""
"Optimal interpolation relies on a set of hyperparameters. Some of these "
"are more complex than others, so let’s break down the main steps."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:30
msgid ""
"The first step is to compute the differences (or \"departures\") between "
"the observed and simulated flow at the stations where both values are "
"available. These differences must be scaled by the catchment area to "
"ensure that errors are relative and can be properly interpolated. Also, "
"we take the logarithm of these scaled values to prevent negative "
"streamflow during extrapolation. We will reverse this transformation "
"later in the process."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:32
msgid ""
"Next, we need some additional information, which may or may not be "
"available for our observation and simulation sites. These include "
"estimates of:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:34
msgid "The variance of the observations at the gauged sites."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:35
msgid ""
"The variance of the simulated flows at the observation sites. This is a "
"vector of size 3 in this example, with one value per observation site. "
"Note that this variance refers to the simulations at the observation "
"sites, not the variance of the observations themselves."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:36
msgid ""
"The variance of the simulated flows at the estimation sites. This is a "
"vector of size 5 in this example, with one value per simulation site, "
"including those that also correspond to an observation site."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:38
msgid ""
"These can be estimated in real-world applications using long time series "
"of log-transformed and scaled flows, or from measurement errors "
"associated with the instrumentation at gauged sites. These parameters can"
" also be fine-tuned based on past experience or through trial-and-error."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:40
msgid ""
"The final component we need is the error covariance function (ECF). In "
"simple terms, optimal interpolation takes into account the distance "
"between an observation (or multiple observations) and the site where we "
"need to estimate a new flow value. Intuitively, a simulation station "
"close to an observation station should have a high correlation with it, "
"while a station farther away will have a lower correlation. Therefore, we"
" need a covariance function that estimates:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:42
msgid "The degree of covariability between an observed and simulated point."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:43
msgid "The distance between these points."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:45
msgid ""
"The ECF function is key to this, and several models of it exist in the "
"literature. In many cases, a model form will be chosen *a priori*, and "
"its parameters will be adjusted to best represent the covariance between "
"points."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:47
msgid ""
"In this test example, we don’t have enough points or time steps to "
"develop a meaningful model (or parameterization) from the data. As a "
"result, we will impose a model. ``xHydro`` includes four built-in models,"
" where ``par[0]`` and ``par[1]`` are the model parameters to be "
"calibrated (under normal circumstances), and *h* represents the distance "
"between points:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:49
msgid "**Model 1**:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:51
msgid ""
"\\begin{flalign*}\n"
"&\\text{par}[0] \\cdot \\left( 1 + \\frac{h}{\\text{par}[1]} \\right) "
"\\cdot \\exp\\left(- \\frac{h}{\\text{par}[1]} \\right) && \\text{— From "
"Lachance-Cloutier et al. 2017.}\n"
"\\end{flalign*}"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:58
msgid "**Model 2**:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:60
msgid ""
"\\begin{flalign*}\n"
"&\\text{par}[0] \\cdot \\exp\\left( -0.5 \\cdot \\left( "
"\\frac{h}{\\text{par}[1]} \\right)^2 \\right) &&\n"
"\\end{flalign*}"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:67
msgid "**Model 3**:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:69
msgid ""
"\\begin{flalign*}\n"
"&\\text{par}[0] \\cdot \\exp\\left( -\\frac{h}{\\text{par}[1]} \\right) "
"&&\n"
"\\end{flalign*}"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:76
msgid "**Model 4**:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:78
msgid ""
"\\begin{flalign*}\n"
"&\\text{par}[0] \\cdot \\exp\\left( "
"-\\frac{h^{\\text{par}[1]}}{\\text{par}[0]} \\right) &&\n"
"\\end{flalign*}"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:119
msgid "Example with HYDROTEL data"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:130
msgid ""
"Optimal interpolation relies on both observed and simulated datasets and "
"requires the following information:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:132
msgid "Observed data for the gauged locations"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:133
msgid "Simulated data for all locations"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:134
msgid "Catchment areas (for error scaling)"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:135
msgid "Catchment latitude and longitude (to develop the spatial error model)"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:137
msgid ""
"This example will use a subset of data generated using the HYDROTEL "
"hydrological model."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:204
msgid "There are three datasets, as well as a list:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:206
msgid "**qobs**: The dataset containing point observations and station metadata."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:207
msgid ""
"**qsim**: The dataset containing the background field simulations (e.g. "
"the raw HYDROTEL results), including simulated station metadata."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:208
msgid ""
"**station_correspondence**: A dataset that simply links station "
"identifiers between the observed and simulated stations. This is "
"necessary because observed stations use \"real-world\" identifiers, while"
" distributed simulations often employ coded or sequentially numbered "
"identifiers."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:209
msgid ""
"**observation_stations**: A list of the stations from the observation set"
" that we want to use to build the optimal interpolation."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1706
msgid "WARNING"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1708
msgid ""
"The optimal interpolation module in ``xHydro`` is still a work-in-"
"progress and is highly hard-coded, particularly regarding inputs. Expect "
"significant changes as the code is refactored and improved."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1714
msgid "The datasets need to follow specific formatting requirements."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1716
msgid ""
"For the observed dataset (``qobs`` in this example), the following "
"conditions must be met:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1718
#: ../../notebooks/optimal_interpolation.ipynb:1726
msgid "The dimensions should be ``station`` and ``time``."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1719
msgid "The streamflow data must be stored in a variable called ``streamflow``."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1720
msgid ""
"The catchment drainage area must be represented in a variable named "
"``drainage_area``."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1721
msgid ""
"The latitude and longitude of the catchment centroids must be stored as "
"``centroid_lat`` and ``centroid_lon`` (these are not the hydrometric "
"station coordinates)."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1722
msgid ""
"A variable called ``station_id`` must exist, containing a unique "
"identifier for each station. This will be used to match the observation "
"stations with their corresponding simulated stations."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1724
msgid ""
"For the simulation dataset (``qsim`` in this example), the following "
"requirements apply:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1727
msgid "The streamflow data should be in a variable named ``streamflow``."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1728
msgid ""
"The drainage area for each catchment, as simulated by the model, should "
"be stored in a variable called ``drainage_area``."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1729
msgid ""
"The centroids of the catchments must be represented by the coordinates "
"``lat`` and ``lon``."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1730
msgid ""
"A variable called ``station_id`` must exist, containing a unique "
"identifier for each simulated station, used to map it to the observed "
"stations."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1732
msgid ""
"The correspondence table (``station_correspondence`` in this example) "
"must include:"
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1734
msgid "``station_id`` for the observed stations."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1735
msgid "``reach_id`` for the simulated stations."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:1737
msgid ""
"Optimal interpolation in ``xHydro`` is primarily accessed through the "
"``xhydro.optimal_interpolation.optimal_interpolation_fun.execute_interpolation``"
" function. When performing leave-one-out cross-validation across multiple"
" catchments, the entire interpolation process is repeated for each "
"catchment. In each iteration, one observation station is left out and "
"held independent for validation. This process can be time-consuming but "
"can be parallelized by adjusting the relevant flag and setting the number"
" of CPU cores based on your machine’s capacity. By default, the code will"
" use only 1 core, but if you choose to increase it, the maximum number of"
" cores used will be limited to ``([number-of-available-cores / 2] - 1)`` "
"to avoid overloading your computer."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:2586
msgid ""
"The returned dataset contains a variable called ``streamflow`` with the "
"dimensions ``[percentile, station_id, time]``, providing estimates for "
"any requested percentile to assess uncertainty. Let's now explore how the"
" optimal interpolation has changed the streamflow at one catchment."
msgstr ""

#: ../../notebooks/optimal_interpolation.ipynb:2653
msgid ""
"We can observe that optimal interpolation generally helped bring the "
"model simulation closer to the observed data."
msgstr ""
