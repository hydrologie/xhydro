# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Thomas-Charles Fortier Filion
# This file is distributed under the same license as the xHydro package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: xHydro 0.4.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-03 11:23-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: fr\n"
"Language-Team: fr <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../releasing.rst:3
msgid "Releasing"
msgstr "Publier une nouvelle version"

#: ../../releasing.rst:6
msgid "Deployment"
msgstr "Déploiement"

#: ../../releasing.rst:8
msgid ""
"This page is a reminder for the **maintainers** on how to deploy. This "
"section is only relevant when producing a new point release for the "
"package."
msgstr ""
"Cette page est un rappel pour les **mainteneurs** sur la façon de déployer. "
"Cette section n'est pertinente que lors de la publication d'une nouvelle version mineure de la "
"librairie."

#: ../../releasing.rst:12
msgid ""
"It is important to be aware that any changes to files found within the "
"``src/xhydro`` folder (with the exception of ``src/xhydro/__init__.py``) "
"will trigger the ``bump-version.yml`` workflow. Be careful not to commit "
"changes to files in this folder when preparing a new release."
msgstr ""
"Il est important de savoir que toute modification des fichiers situés dans le dossier "
"``src/xhydro`` (à l'exception de ``src/xhydro/__init__.py``) déclenchera le workflow "
"``bump-version.yml``. Faites attention à ne pas commettre de modifications dans ces fichiers "
"lors de la préparation d'une nouvelle version."

#: ../../releasing.rst:14
msgid "Create a new branch from `main` (e.g. `release-0.2.0`)."
msgstr "Créer une nouvelle branche depuis `main` (par exemple, `release-0.2.0`)."

#: ../../releasing.rst:15
msgid ""
"Update the `CHANGELOG.rst` file to change the `Unreleased` section to the"
" current date."
msgstr ""
"Mettre à jour le fichier `CHANGELOG.rst` pour changer la section `Unreleased` à la "
"date actuelle."

#: ../../releasing.rst:16
msgid ""
"Bump the version in your branch to the next version (e.g. `v0.1.0 -> "
"v0.2.0`):"
msgstr ""
"Augmenter la version dans votre branche à la version suivante (par exemple, `v0.1.0 -> "
"v0.2.0`) :"

#: ../../releasing.rst:24
msgid "Create a pull request from your branch to `main`."
msgstr "Créer une pull request de votre branche vers `main`."

#: ../../releasing.rst:25
msgid ""
"Once the pull request is merged, create a new release on GitHub. On the "
"`main` branch, run:"
msgstr ""
"Une fois la pull request fusionnée, créer une nouvelle version sur GitHub. Sur la "
"branche `main`, exécutez :"

#: ../../releasing.rst:32
msgid ""
"This will trigger a GitHub workflow to build the package and upload it to"
" TestPyPI. At the same time, the GitHub workflow will create a draft "
"release on GitHub. Assuming that the workflow passes, the final release "
"can then be published on GitHub by finalizing the draft release."
msgstr ""
"Cela déclenchera un workflow GitHub pour construire la librairie et la télécharger sur "
"TestPyPI. En même temps, le workflow GitHub créera une version brouillon sur GitHub. "
"Si le workflow réussit, la version finale pourra être publiée sur GitHub en finalisant la version brouillon."

#: ../../releasing.rst:34
msgid "To generate the release notes, run:"
msgstr "Pour générer les notes de version, exécutez :"

#: ../../releasing.rst:42
msgid ""
"This will print the release notes (taken from the `CHANGELOG.rst` file) "
"to your python console. Copy and paste them into the GitHub release "
"description, keeping only the changes for the current version."
msgstr ""
"Cela affichera les notes de version (tirées du fichier `CHANGELOG.rst`) "
"dans votre console Python. Copiez-collez-les dans la description de la version sur GitHub, "
"en ne conservant que les changements pour la version actuelle."

#: ../../releasing.rst:44
msgid ""
"Once the release is published, the `publish-pypi.yml` workflow will go "
"into an `awaiting approval` mode on Github Actions. Only authorized users"
" may approve this workflow (notifications will be sent) to trigger the "
"upload to PyPI."
msgstr ""
"Une fois la version publiée, le workflow `publish-pypi.yml` passera "
"en mode `awaiting approval` sur Github Actions. Seuls les utilisateurs autorisés "
"pourront approuver ce workflow (des notifications seront envoyées) pour déclencher "
"le téléchargement sur PyPI."

#: ../../releasing.rst:48
msgid ""
"Uploads to PyPI can **never** be overwritten. If you make a mistake, you "
"will need to bump the version and re-release the package. If the package "
"uploaded to PyPI is broken, you should modify the GitHub release to mark "
"the package as broken, as well as yank the package (mark the version "
"\"broken\") on PyPI."
msgstr ""
"Les téléchargements vers PyPI **ne peuvent jamais** être écrasés. Si vous faites une erreur, "
"vous devrez augmenter la version et republier la librairie. Si la librairie "
"téléchargée sur PyPI est défectueuse, vous devez modifier la version sur GitHub pour marquer "
"la librairie comme défectueuse, ainsi que retirer cette version (marquer la version "
"\"broken\") sur PyPI."

#: ../../releasing.rst:50
msgid ""
"A new version of `xHydro` on PyPI will trigger the `regro-cf-autotick-"
"bot` to open a pull request on the conda-forge feedstock. This will "
"automatically update the feedstock with the new version of the package. "
"The feedstock maintainers will need to review and merge the pull request."
msgstr ""
"Une nouvelle version de `xHydro` sur PyPI déclenchera le `regro-cf-autotick-"
"bot` pour ouvrir une pull request sur le dépôt conda-forge. Cela mettra "
"automatiquement à jour le dépôt avec la nouvelle version de la librairie. "
"Les mainteneurs du dépôt devront examiner et fusionner la pull request."
