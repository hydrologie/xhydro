name: xHydro Testing Suite

on:
  push:
    branches:
      - main
    paths-ignore:
      - .cruft.json
      - CHANGELOG.rst
      - README.rst
      - pyproject.toml
      - tests/test_xhydro.py
      - src/xhydro/__init__.py
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - labeled
      - unlabeled
  pull_request_review:
    types:
      - submitted
      - edited

concurrency:
  # For a given workflow, if we push to the same branch, cancel all previous builds on that branch except on master.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

permissions:
  contents: read

jobs:
  lint:
    name: Lint (Python${{ matrix.python-version }})
    runs-on: ubuntu-latest
    if: |
      ((github.event_name == 'pull_request') && (github.event.action != 'labeled')) ||
      (github.event.review.state == 'approved') ||
      (github.event_name == 'push')
    strategy:
      matrix:
        python-version:
          - "3.x"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Environment Caching
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            .tox
          key: ${{ hashFiles('pyproject.toml', 'tox.ini') }}-lint
      - name: Run linting suite
        run: |
          python -m tox -e lint

  test-preliminary:
    name: Preliminary Tests (Python${{ matrix.python-version }}, ${{ matrix.os }})
    needs: lint
    if: |
      (github.event_name == 'pull_request') && !contains(github.event.pull_request.labels.*.name, 'approved')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.10" ]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            185.125.188.54:443
            185.125.188.55:443
            185.125.188.58:443
            185.125.188.59:443
            ai4edataeuwest.blob.core.windows.net:443
            api.github.com:443
            cdn.proj.org:443
            conda.anaconda.org:443
            elevationeuwest.blob.core.windows.net:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pkg.julialang.org:443
            planetarycomputer.microsoft.com:443
            pypi.org:443
            raw.githubusercontent.com:443
            s3.us-east-2.wasabisys.com:443
            s3.wasabisys.com:443
            storage.julialang.net:443
            us-east.pkg.julialang.org:443
            us-west.pkg.julialang.org:443
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@add3a49764cedee8ee24e82dfde87f5bc2914462 # v2.0.7
        with:
          cache-downloads: true
          cache-environment: true
          environment-file: environment-dev.yml
          create-args: >-
            python=${{ matrix.python-version }}
      - name: Install xHydro
        run: |
          python -m pip install --no-deps .
      - name: Check versions
        run: |
          micromamba list
          python -m pip check || true
      - name: Test with pytest
        run: |
          make test
        env:
          CI: "1"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-conda:
    name: Test with Python${{ matrix.python-version }} (Anaconda, ${{ matrix.os }})
    needs: lint
    if: |
      contains(github.event.pull_request.labels.*.name, 'approved') ||
      (github.event.review.state == 'approved') ||
      (github.event_name == 'push')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
        julia: [ false ]
        include: # Only run the latest Python version on push
          - os: 'ubuntu-latest'
            python-version: "3.12"
            julia: true
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            185.125.188.54:443
            185.125.188.55:443
            185.125.188.58:443
            185.125.188.59:443
            ai4edataeuwest.blob.core.windows.net:443
            api.github.com:443
            cdn.proj.org:443
            conda.anaconda.org:443
            coveralls.io:443
            elevationeuwest.blob.core.windows.net:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pkg.julialang.org:443
            pypi.org:443
            raw.githubusercontent.com:443
            s3.us-east-2.wasabisys.com:443
            s3.wasabisys.com:443
            storage.julialang.net:443
            us-east.pkg.julialang.org:443
            us-west.pkg.julialang.org:443
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@add3a49764cedee8ee24e82dfde87f5bc2914462 # v2.0.7
        with:
          cache-downloads: true
          cache-environment: true
          environment-file: environment-dev.yml
          create-args: >-
            python=${{ matrix.python-version }}
      - name: Install PyJuliaCall
        if: ${{ matrix.julia == true }}
        run: |
          micromamba install -c conda-forge "pyjuliacall>=0.9.20"
      - name: Install xHydro
        run: |
          python -m pip install --no-deps .
      - name: Check versions
        run: |
          micromamba list
          python -m pip check || true
      - name: Test with pytest
        run: |
          python -m pytest --cov xhydro --cov-report=lcov
      - name: Report Coverage
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          flag-name: run-${{ matrix.python-version }}-conda
          parallel: true

  test-pypi:
    name: Test with Python${{ matrix.python-version }} (tox, ${{ matrix.os }})
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.12" ]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: false
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Set up Python${{ matrix.python-version }}
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Install HDF5
        run: |
          sudo apt-get update
          sudo apt-get install -y libhdf5-dev
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Environment Caching
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: |
            .tox
          key: ${{ matrix.os }}-Python${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}
      - name: Test with tox
        run: |
          python -m tox -e ${{ matrix.python-version }}-coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: run-Python${{ matrix.python-version }}
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

  test-notebooks:
    name: Test Notebooks (Python${{ matrix.python-version }}, ${{ matrix.os }})
    needs: lint
    if: |
      contains(github.event.pull_request.labels.*.name, 'notebooks') ||
      contains(github.event.pull_request.labels.*.name, 'approved') ||
      (github.event.review.state == 'approved') ||
      (github.event_name == 'push')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.12" ]
        julia: [ true, false ]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            185.125.188.54:443
            185.125.188.55:443
            185.125.188.58:443
            185.125.188.59:443
            ai4edataeuwest.blob.core.windows.net:443
            api.github.com:443
            api.ipify.org:443
            cdn.proj.org:443
            conda.anaconda.org:443
            elevationeuwest.blob.core.windows.net:443
            files.pythonhosted.org:443
            github.com:443
            objects.githubusercontent.com:443
            pkg.julialang.org:443
            planetarycomputer.microsoft.com:443
            pypi.org:443
            raw.githubusercontent.com:443
            s3.us-east-2.wasabisys.com:443
            s3.wasabisys.com:443
            storage.julialang.net:443
            us-east.pkg.julialang.org:443
            us-west.pkg.julialang.org:443
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - name: Setup Conda (Micromamba) with Python${{ matrix.python-version }}
        uses: mamba-org/setup-micromamba@add3a49764cedee8ee24e82dfde87f5bc2914462 # v2.0.7
        with:
          cache-downloads: true
          cache-environment: true
          environment-file: environment-dev.yml
          create-args: >-
            python=${{ matrix.python-version }}
      - name: Install PyJuliaCall
        if: ${{ matrix.julia == true }}
        run: |
          micromamba install -c conda-forge "pyjuliacall>=0.9.20"
      - name: Install xHydro
        run: |
          python -m pip install --no-deps .
      - name: Check versions
        run: |
          micromamba list
          python -m pip check || true
      - name: Test Notebooks (no Julia)
        if: ${{ matrix.julia == false }}
        run: |
          make test-notebooks-lax-noextremes
      - name: Test Notebooks (Julia)
        if: ${{ matrix.julia == true }}
        run: |
          make test-notebooks-lax-onlyextremes

  finish:
    needs:
      - test-conda
      - test-pypi
      - test-notebooks
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Coveralls Finished
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          parallel-finished: true
